steps:
  # Run tests
  - name: 'python:3.11'
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt', '-r', 'requirements-dev.txt']
    dir: 'backend'

  - name: 'python:3.11'
    entrypoint: python
    args: ['-m', 'pytest', '--junitxml=test-reports/junit.xml', '--cov=app', '--cov-report=xml']
    dir: 'backend'

  # Build container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:latest'
      - '--build-arg'
      - 'ENVIRONMENT=${_ENVIRONMENT}'
      - '.'
    dir: 'backend'

  # Push container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:${SHORT_SHA}'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:latest'

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'api'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--set-env-vars'
      - 'ENVIRONMENT=${_ENVIRONMENT}'
      - '--vpc-connector'
      - '${_VPC_CONNECTOR}'
      - '--set-secrets'
      - 'DB_PASSWORD=db-password:latest'

  # Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run jobs create migration-job \
          --image ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/api:${SHORT_SHA} \
          --region ${_REGION} \
          --service-account ${_SERVICE_ACCOUNT} \
          --set-env-vars ENVIRONMENT=${_ENVIRONMENT} \
          --command python \
          --args "manage.py,db,upgrade" \
          --execute-now

timeout: '3600s'
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'city-lifestyle'
  _ENVIRONMENT: 'production'
  _SERVICE_ACCOUNT: 'city-lifestyle-sa@${PROJECT_ID}.iam.gserviceaccount.com'
  _VPC_CONNECTOR: 'vpc-connector'

artifacts:
  objects:
    location: 'gs://${PROJECT_ID}_cloudbuild/artifacts/${BUILD_ID}'
    paths:
      - 'backend/test-reports/junit.xml'
      - 'backend/coverage.xml'

tags:
  - 'backend'
  - 'production'
