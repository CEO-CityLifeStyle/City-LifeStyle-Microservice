steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/city-lifestyle-backend:$COMMIT_SHA', './backend']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/city-lifestyle-backend:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'city-lifestyle-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/city-lifestyle-backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--set-secrets'
      - 'MONGODB_URI=mongodb-uri:latest,JWT_SECRET=jwt-secret:latest,REDIS_URL=redis-url:latest'

  # Create VPC connector if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'compute'
      - 'networks'
      - 'vpc-access'
      - 'connectors'
      - 'create'
      - 'city-lifestyle-connector'
      - '--network'
      - 'default'
      - '--region'
      - 'us-central1'
      - '--range'
      - '10.8.0.0/28'
      - '--min-instances'
      - '2'
      - '--max-instances'
      - '10'
      - '--machine-type'
      - 'e2-micro'
    id: 'create-vpc'

  # Configure Cloud Run to use VPC connector
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update'
      - 'city-lifestyle-backend'
      - '--vpc-connector'
      - 'city-lifestyle-connector'
      - '--region'
      - 'us-central1'
    id: 'configure-vpc'
    waitFor: ['create-vpc']

images:
  - 'gcr.io/$PROJECT_ID/city-lifestyle-backend:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
